import unittest
from flask_mysqldb import MySQL
from flask import Flask
from flask_testing import TestCase
import config
import unittest
from supportFunctions import *
from SQLtables.SprayData.sql import run
from flask import Flask, render_template, request, redirect, url_for, session
import config
from urllib.request import Request

class Test_Report(TestCase):
	def create_app(self):
		run('SQLtables/SprayData/SprayData.xlsx')
		app = Flask(__name__)
		app.config['MYSQL_HOST'] = config.host
		app.config['MYSQL_USER'] = config.user
		app.config['MYSQL_PASSWORD'] = config.password
		app.config['MYSQL_DB'] = config.database
		app.config['TESTING'] = True
		return app
	def test_getCrops(self):
		expected =['alfalfa','barely','bluegrass','clover','corn','durum wheat','fescue',
					 'oats','peppermint','potato','rye','spearmint','wheat grass']
		self.assertEqual(expected,getCrops(mysql=MySQL(self.app)))
	def test_getWeeds(self):
		ECrops =['durum wheat','rye']
		ESprays ="('2 4-d amine 4 albaugh','2 4-d amine alligare  llc','2 4-d lv 4 winfield united','dagger')"
		EWeeds = [
				'alder',
				'alligatorweed',
				'american lotus',
				'annual morningglory',
				'annual smartweed',
				'annual sowthistle',
				'aquatic ',
				'arrowhead',
				'artichoke',
				'ash',
				'aspen',
				'aster',
				'austrian field cress',
				'beggarticks',
				'bidens species',
				'big sagebrush',
				'bindweed',
				'birch',
				'bitter sneezeweed',
				'bitter wintercress',
				'bittercress',
				'bitterweed',
				'blackeyed susan',
				'blessed thistle',
				'blue beech',
				'blue lettuce',
				'boxelder',
				'broom snakeweed',
				'broomweed',
				'buckbrush',
				'buckhorn',
				'buckhorn plantain',
				'bull thistle',
				'bullnettle',
				'bulrush',
				'bur ragweed',
				'burcucumber',
				'burdock',
				'buttercup',
				'canada thistle',
				'carolina geranium',
				'carpetweed',
				'cascara',
				'catnip',
				'catsear',
				'ceanothus',
				'chamise',
				'chaparral species',
				'cherokee rose',
				'cherry',
				'chervil',
				'chickweed',
				'chicory',
				'chinquapin',
				'cinquefoil',
				'climbing milkweed',
				'coastal sage',
				'cockle',
				'cocklebur',
				'coffeebean',
				'coffeeweed',
				'common broomweed',
				'common burdock',
				'common cattail',
				'common cinquefoil',
				'common cocklebur',
				'common eveningprimrose',
				'common lambsquarters',
				'common morningglory',
				'common mullein',
				'common purslane',
				'common ragweed',
				'common salsify',
				'common sowthistle',
				'common waterplantain',
				'cornflower',
				'coyote brush',
				'creeping jenny',
				'croton',
				'curly indigo',
				'cutleaf eveningprimrose',
				'daisy',
				'daisy fleabane',
				'dandelion',
				'devils claw',
				'dock',
				'dogbane',
				'dogwood',
				'dragonhead mint',
				'duckweed',
				'dwarf mallow',
				'dwarf nettle',
				'elderberry',
				'elm',
				'eurasian watermilfoil',
				'european bindweed',
				'false dandelion',
				'fanweed',
				'fat hen',
				'fennel',
				'field bindweed',
				'field horsetail',
				'field pennycress',
				'field pepperweed',
				'flixweed',
				'florida pusley',
				'frenchweed',
				'galinsoga',
				'giant ragweed',
				'goatsbeard',
				'goldenrod',
				'goosefoot',
				'ground ivy',
				'gumweed',
				'hairy vetch',
				'halbertleaved saltbush',
				'hawthorn',
				'hazel',
				'hazel brush',
				'healall',
				'hedge bindweed',
				'hemp',
				'hempnettle',
				'henbit',
				'hickory',
				'hoary cress',
				'honeysuckle',
				'horseweed',
				'indiana mallow',
				'indigo',
				'ironweed',
				'ivy morningglory',
				'japanese honeysuckle',
				'jerusalem artichoke',
				'jewelweed',
				'jimsonweed',
				'klamathweed',
				'knotweed',
				'kochia',
				'lambsquarters',
				'little mallow',
				'locoweed',
				'lupine',
				'madrone',
				'mallow',
				'many flowered aster',
				'manzanita',
				'maple',
				'marestail',
				'marijuana',
				'marshelder',
				'meadow buttercup',
				'mexican poppy',
				'mexicanweed',
				'milkvetch',
				'miners lettuce',
				'morningglory',
				'mousetail',
				'musk thistle',
				'mustard',
				'narrowleaf plantain',
				'nettle',
				'nutgrass',
				'oak',
				'orange hawkweed',
				'parrot feather',
				'parsnip',
				'pecan',
				'pennsylvania smartweed',
				'pennycress',
				'pennywort',
				'peppergrass',
				'pepperweed',
				'perennial morningglory',
				'perennial ragweed',
				'perennial sowthistle',
				'pigweed',
				'plantain',
				'poison hemlock',
				'poison ivy',
				'pokeweed',
				'poorjoe',
				'poplar',
				'povertyweed',
				'prickly lettuce',
				'primrose',
				'puncturevine',
				'purslane',
				'rabbitbrush',
				'ragweed',
				'red clover',
				'red maple',
				'red root',
				'redstem',
				'rough cinquefoil',
				'rough fleabane',
				'rush',
				'russian thistle',
				'sagebrush',
				'salsify',
				'sand sagebrush',
				'sand shinnery oak',
				'serviceberry',
				'sheep sorrel',
				'shepherdspurse',
				'sicklepod',
				'small plantain',
				'smallflower bittercress',
				'smallflower buttercup',
				'smartweed',
				'sneezeweed',
				'southern wild rose',
				'sowthistle',
				'spanishneedles',
				'spatterdock',
				'speedwell',
				'spiny sowthistle',
				'spotted knapweed',
				'st. johnswort',
				'stinging nettle',
				'stinkweed',
				'sumac',
				'sunflower',
				'sweet clover',
				'sweetgum',
				'tan oak',
				'tansy ragwort',
				'tansymustard',
				'tanweed',
				'tarweed',
				'texas blueweed',
				'texas croton',
				'thistle',
				'thornapple',
				'toadflax',
				'tree stumps',
				'tree-of-heaven',
				'tule',
				'tumble mustard',
				'tumbleweed',
				'velvetleaf',
				'venice mallow',
				'vervain',
				'vetch',
				'virginia copperleaf',
				'virginia creeper',
				'volunteer bean',
				'volunteer lentil',
				'volunteer pea',
				'water plantain',
				'waterhyacinth',
				'waterlily',
				'waterprimrose',
				'watershield',
				'western ironweed',
				'western salsify',
				'white clover',
				'white locoweed',
				'white top',
				'whitebrush',
				'wild buckwheat',
				'wild carrot',
				'wild garlic',
				'wild gooseberry',
				'wild grape',
				'wild hemp',
				'wild jute',
				'wild lettuce',
				'wild marigold',
				'wild mustard',
				'wild onion',
				'wild parsnip',
				'wild petunia',
				'wild radish',
				'wild rape',
				'wild sage',
				'wild strawberry',
				'wild sweet potato',
				'willow',
				'witchweed',
				'woody brush and vines',
				'woolly croton',
				'woolly morningglory',
				'woolly plantain',
				'wormseed',
				'wormwood',
				'yellow daisy',
				'yellow hawkweed',
				'yellow rocket',
				'yellow starthistle']	
		weeds,crops, sprays =getWeeds(mysql=MySQL(self.app),crops=['durum wheat','rye'])
		self.assertEqual(EWeeds,weeds)
		self.assertEqual(ECrops,crops)
		self.assertEqual(ESprays,sprays)
	def test_getSprays(self):
		EFullReport =[
      			['2 4-d amine alligare  llc', '20.00', ['bitterweed', 'broomweed', 'dandelion'], '2.00'], 
                ['2 4-d amine 4 albaugh', '31.00', ['bitterweed', 'broomweed', 'dandelion'], '1.70'], 
                ['dagger', '10.00', ['dandelion'], '1.15'], 
                ['2 4-d lv 4 winfield united', '21.00', ['dandelion'], '2.10']]
		fullReport = getReport(mysql=MySQL(self.app),crops=['durum wheat','rye'],
                         sprays="('2 4-d amine 4 albaugh','2 4-d amine alligare  llc','2 4-d lv 4 winfield united','dagger')",
                         weeds="('dandelion','bitterweed','broomweed')")
		self.assertEqual(EFullReport,fullReport)
	def test_sortByList(self):
		list1 = [1,2,4,3]
		list2 = ['d','c','a','b']
		resultOfFunc = sortByList(list1=list1, list2=list2)
		expected = ['a','b','c','d']
		self.assertEqual(expected,resultOfFunc)
	def test_filtterQuerry(self):
		result =[['2 4-d lv 4 winfield united','dandelion',21.00],
		['2 4-d amine 4 albaugh','bitterweed',31.00],
		['2 4-d amine 4 albaugh','broomweed',31.00],
		['2 4-d amine 4 albaugh','dandelion',31.00],
		['2 4-d amine alligare  llc','bitterweed',20.00],
		['2 4-d amine alligare  llc','broomweed',20.00],
		['2 4-d amine alligare  llc','dandelion',20.00],
		['dagger','dandelion',10.00]]
		resultOfFunc = filterQuery(result)
		expected = [['2 4-d amine alligare  llc', '20.00', ['bitterweed', 'broomweed', 'dandelion']],
					['2 4-d amine 4 albaugh', '31.00', ['bitterweed', 'broomweed', 'dandelion']], 
					['dagger', '10.00', ['dandelion']], ['2 4-d lv 4 winfield united', '21.00', ['dandelion']]]
		self.assertEqual(expected,resultOfFunc)
	def test_CalculateResult(self):
		sprayName ='2 4-d amine alligare  llc'
		sprayData = [['2 4-d amine alligare  llc', '20.00', ['dandelion', 'broomweed', 'bitterweed'], '2.00'],
					 ['2 4-d amine 4 albaugh', '31.00', ['dandelion', 'broomweed', 'bitterweed'], '1.70'],
					 ['dagger', '10.00', ['dandelion'], '1.15'],
					 ['2 4-d lv 4 winfield united', '21.00', ['dandelion'], '2.10']]
		acerage = 10
		sprayGPA = 11
		tankSize = 100
		resutultOfFunc = calculateResult(sprayName,sprayData,acerage,sprayGPA,tankSize)
		expected =[sprayName,2.5,50.00,[1,2.2727],[0.2273,9.7727]]
		self.assertEqual(expected , resutultOfFunc)

if __name__ == '__main__':
	unittest.main()
